{
    "page": "home",
    "spec": {
        "title": "London Node User Group - LNUG",
        "h1": {
            "className": "animated bounceInTop"
        },
        ".lnug-ticket": {
            "component": "ticket",
            "data": {
                ".lnug-nextmeetup": "June 28th 2017",
                ".venue": "Makers Academy",
                "address": "50 - 52 Commercial St<br />London E1 6LT",
                ".address a": {
                    "href": "https://www.google.co.uk/maps/search/50 - 52 Commercial St,%20London E1 6LT"
                },
                "a.cta": {
                    "href": "http://www.meetup.com/london-nodejs/"
                }
            }
        },
        ".lnug-content": {
            "component": "speaker",
            "data": [
                {
                    ".name": "Daniel Khan",
                    ".title": "Don&#39;t Let Just Node.js Take the Blame!",
                    ".desc": "<h2 id=\"abstract\">Abstract</h2>\n<p>Most likely you are choosing Node.js because it has the reputation to be super-fast, easy to use and you heard a lot of success stories at meetups and conferences. Sure you did performance and scalability tests which confirmed that your decision was correct to go with Node.js. </p>\n<p>What Daniel has seen is that in enterprise environments Node.js often acts as the (often microservice based) gluing tier that connects legacy services to modern offerings like mobile apps or your HTML5 SPA (Single Page Apps) via a REST API Layer. </p>\n<p>This means that once you integrate your application into the company infrastructure, connect it to internal &amp; external services and go productive you may be the first person to be blamed because &quot;the website is slow&quot; or even better &quot;something broke &ndash; there is an error we have not seen before&quot;. But who knows if in fact a service consumed or brokered by Node or a database is slow?  In this session Daniel will cover - how to trace down problems inside Node - the challenges operations is facing in todays highly heterogeneous applications - how to protect the boundaries of your service to pinpoint problems in other tiers - new tracing features in upcoming versions of Node.</p>\n<h2 id=\"bio\">Bio</h2>\n<p>Pragmatic fullstack engineer from BGP to AJAX. Speaker, mentor and course author. I am leading the Node.js technology efforts of Dynatrace. Member of Node.js Diagnostics WG. Let&#39;s chat about the old days, todays cutting edge technologies, (web) performance ... you name it.</p>\n<p><a href=\"https://twitter.com/dkhan\">@dkhan</a> on twitter</p>\n",
                    "img": {
                        "src": "https://avatars2.githubusercontent.com/u/2722161?v=3"
                    },
                    ".lnug-twitterhandle a": {
                        "href": "https://github.com/danielkhan"
                    }
                },
                {
                    ".name": "Submit your talk!",
                    ".title": "Slot available",
                    ".desc": "This slot is still available, help us out: <a href=\"/speak.html\">Submit a talk proposal</a>.",
                    "img": {
                        "src": "/images/favicon/favicon-128.png"
                    },
                    ".lnug-twitterhandle a": {
                        "href": "https://lnug.org/speak.html"
                    }
                },
                {
                    ".name": "Irina Shestak",
                    ".title": "knock-knock-who-there-file-compression-talk_FINAL_2.tar.trz.bz2.gz",
                    ".desc": "<h2 id=\"abstract\">abstract</h2>\n<p>Fade in. An opened terminal window. iTerm2 is the flavour. Dracula, the theme. You split the panes in two. You are at it again: a stash of audio buffers and that dream of manipulating a lossless file. With node as your language of choice you embark on the night. You manipulate, you transform, you have your byte order sorted, on their own accord your fingers start to type <code>gzip -f yourFavPhilCollinsSong.wav</code>. All of a sudden, a whisper: </p>\n<p><em>But what if</em>.</p>\n<p>we <strong>stream</strong>.</p>\n<p><em>file compression</em>.</p>\n<p>on the <strong>fly</strong>.</p>\n<p>Fade to black. </p>\n<p>In this talk we will walk through file compression algorithms in node as well compression standards. We will cover working with streams, audio buffers, and typed arrays to get us to compress and decompress files, and yourFavPhilCollinsSong.wav.</p>\n<h2 id=\"bio\">bio</h2>\n<p>tl;dr javascript, infrastructure, &#55356;&#57180; &#55356;&#57180; &#55356;&#57180;.</p>\n<p>The not so short: <a href=\"twitter.com/_lrlna\">Irina</a> is a Berlin via London via Vancouver (geeeez grrrl) software developer who is, oh hey, hello, really into node.js. She writes node over at scripto.cc and <a href=\"https://github.com/lrlna\">contributes to a few open-source projects</a> in the meantime. Outside of coding, she spends quite a bit of her time exploring the outdoors, gushing over trains, and reading some Beatniks.</p>\n",
                    "img": {
                        "src": "https://avatars1.githubusercontent.com/u/8107784?v=3"
                    },
                    ".lnug-twitterhandle a": {
                        "href": "https://github.com/lrlna"
                    }
                }
            ]
        },
        ".lnug-mailing-list": {
            "component": "sign-up"
        }
    },
    "route": "/index.html"
}