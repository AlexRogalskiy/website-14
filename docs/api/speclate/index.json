{
    "page": "home",
    "spec": {
        "title": "London Node User Group - LNUG",
        "h1": {
            "className": "animated bounceInTop"
        },
        ".lnug-ticket": {
            "component": "ticket",
            "data": {
                ".lnug-nextmeetup": "August 23rd 2017",
                ".venue": "Makers Academy",
                "address": "50 - 52 Commercial St<br />London E1 6LT",
                ".address a": {
                    "href": "https://www.google.co.uk/maps/search/50 - 52 Commercial St,%20London E1 6LT"
                },
                "a.cta": {
                    "href": "http://www.meetup.com/london-nodejs/"
                }
            }
        },
        ".lnug-content": {
            "component": "speaker",
            "data": [
                {
                    ".name": "BrunoGodefroy",
                    ".title": "Do not yield to javascript generators!",
                    ".desc": "<p><strong>Abstract</strong> Have you ever found yourself completely lost in front of a yield statement? What is this? Where does my promise go? How come I get the result back?</p>\n<p>Generators are widely used amoung Node and javascript libraries to enable developers to write powerful code in a simple way.</p>\n<p>I will try to answer all these questions and we will recreate together the <a href=\"https://github.com/tj/co\">co library</a> that is used, for example, in <a href=\"https://github.com/koajs/koa\">Koajs</a>.</p>\n<p>I would then like to go into a step by step decomposition of <a href=\"https://github.com/redux-saga/redux-saga\">redux-saga</a> to understand how this wonderful library uses generators.</p>\n<p><strong>A bit about me</strong> I&#39;m a full stack developer at Theodo UK, a web agency in central London. We help our clients to solve their business problems through code. Our clients range from young startups to large corporates.&#10;Twitter: <a href=\"https://twitter.com/switcher7707\">@switcher7707</a></p>\n",
                    "img": {
                        "src": "https://avatars1.githubusercontent.com/u/20793868?v=4"
                    },
                    ".lnug-twitterhandle a": {
                        "href": "https://github.com/BrunoGodefroy"
                    }
                },
                {
                    ".name": "Anna Doubkova",
                    ".title": "Node microservices at Pizza Hut",
                    ".desc": "<p><strong>Abstract</strong>&#10;Pizza Hut website is powered by a system of 20+ microservices, all docker-ised and running in AWS. What challenges did we meet while writing it? How do you maintain, develop for, and test a system with extremely high availability on such a scale? It&#39;s a bit like juggling twenty fragile glass balls while riding a bicycle. Nevertheless, it&#39;s a surprisingly reliable way of delivering the best user experience, and pizza, to our users.</p>\n<p><strong>More info</strong>&#10;I&#39;ll introduce our (complex) infrastructure and will talk a bit more about challenges we have faced and how we solved them.</p>\n<ol>\n<li>Splitting logic into microservices; changes made into several microservices at once &amp; deployment.</li>\n<li>Testing our huge products API; running over 20000 unit tests on one microservice, we need to micro-optimise.</li>\n<li>Making sure it actually works; a system of logging, monitoring, and support</li>\n</ol>\n<p><strong>About me</strong>&#10;I&#39;m a software engineer at Pizza Hut (contractor), speaker, node and react developer. Previously worked at Red Badger and Time Out. I recently spoke at JeffConf, React London 2017, several meetups.&#10;Twitter handler: <a href=\"https://twitter.com/lithinn\">@lithinn</a></p>\n",
                    "img": {
                        "src": "https://avatars1.githubusercontent.com/u/6726858?v=4"
                    },
                    ".lnug-twitterhandle a": {
                        "href": "https://github.com/lithin"
                    }
                },
                {
                    ".name": "Zaiste",
                    ".title": "Rapid web development with Huncwot &amp; Marko",
                    ".desc": "<p><strong>Abstract</strong> <a href=\"https://github.com/zaiste/huncwot\">Huncwot</a> is an opinionated &amp; minimal Node.js (yet another) web framework, slightly inspired by Clojure and built for ES6/7 era with &laquo; batteries included &raquo; approach. It tries to formalize conventions and eliminate choices by providing solid defaults for building web applications that increase the programmers productivity. In this talk we&#39;ll explore how to build an application with Huncwot, what it brings to the table and how to make (web) programming more approachable, especially to non-programmers.</p>\n<p><strong>A bit about me</strong> I run a software company called <a href=\"https://nukomeet.com/\">Nukomeet</a>. In my spare time I organise <a href=\"https://polyconf.com/\">PolyConf</a>. Twitter: <a href=\"http://twitter.com/zaiste\">@zaiste</a></p>\n",
                    "img": {
                        "src": "https://avatars1.githubusercontent.com/u/200613?v=4"
                    },
                    ".lnug-twitterhandle a": {
                        "href": "https://github.com/zaiste"
                    }
                }
            ]
        },
        ".lnug-mailing-list": {
            "component": "sign-up"
        }
    },
    "route": "/index.html"
}