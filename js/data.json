{"all": [{"username": "Globegitter", "name": "Markus Padourek", "title": "Benefits of using Convention over Configuration", "avatar": "https://avatars.githubusercontent.com/u/2580254?v=3", "date": "March 25th 2015", "desc": "Node/io.js and npm is now the most flourishing ecosystem with over 200 npm modules being published a day*. While this poses a lot of opportunities for us to work together and build better software, it also comes with problems we as developers have to face: Which package should I now choose? How do I use it in my app? What input does it expect? etc. Making a multitude of these simple decision drains a lot of our energy - more than you might even think initially. Imagine now `npm install` and you are ready to go. You installed your addon, you already know what to expect and it hooks itself up into your app.<br><br>This is the philosophy behind convention-over-configuration: having a standard we all work with to automate mundane decisions. So we can focus on making our software better.<br><br>*Source: http://www.modulecounts.com/"}, {"username": "rosskukulinski", "name": "Ross Kukulinski", "title": "Building NodeJS Applications with Docker & CoreOS", "avatar": "https://avatars.githubusercontent.com/u/2746479?v=3", "date": "March 25th 2015", "desc": "Hello!<br><br>I'm a co-organizer of [BayNode](http://www.meetup.com/BayNode/) and internet friends with @orliesaurus and @iancrowther.  We've been kicking around the idea of sharing pre-recorded talks.<br><br>I'm proposing to do a (revised) screencast of a talk I did at BayNode in November.  Slides for that talk can be found [here](http://www.slideshare.net/kuxman/bay-node-dockernodejscoreos)"}, {"username": "alanshaw", "name": "Alan Shaw", "title": "Super simple service health monitoring with upmon", "avatar": "https://avatars.githubusercontent.com/u/152863?v=3", "date": "March 25th 2015", "desc": "A talk about this thing I built called [upmon](https://github.com/alanshaw/upmon). It's essentially a description of what it is and how to use it and how using node streams is a great way to create modular and compose-able software."}]}