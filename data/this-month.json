[
    {
        "apiSpeakerUrl": "https://api.github.com/users/salmanff",
        "speakerUrl": "https://github.com/salmanff",
        "title": "A Hobbyist&rsquo;s Quest for a Personal Server",
        "description": "<p>How easy is it for a non-techie lay-person to set up a personal server and have their own apps running on it?</p>\n<p>There&#39;s been much talk recently about how large companies host our data, control it, and sell ads against it. But what if we all had our own servers with our own applications running on them holding our data which we control? </p>\n<p>Is that doable today, using existing cloud services and node.js? What does it take? How easy is it?</p>\n<p>For the past few years, I&#39;ve been running my personal node.js-based server on AWS, Google Cloud, Openshift and Heroku, using mlabs and Mongo, as well as Dropbox!</p>\n<p>So I&#39;ll talk about what it takes for a non-techie (or at least a newbie) to set up a node.js server using each of those environments - the pluses and minuses of each ... and why doing this would be a good thing in general.</p>\n<p>About me:&#10;I am clean tech entrepreneur (@zemenergy.com) and VC executive (@top-funds.com). I code for fun. See <a href=\"http://freezr.info\">http://freezr.info</a> twitter:salmanff github:salmanff</p>\n",
        "milestone": "April 25th 2018",
        "img": "https://avatars1.githubusercontent.com/u/1517629?v=4",
        "handle": "salmanff",
        "name": "Salman FF"
    },
    {
        "apiSpeakerUrl": "https://api.github.com/users/paulbjensen",
        "speakerUrl": "https://github.com/paulbjensen",
        "title": "End-to-end testing Single Page Apps and APIs with Cucumber.js &amp; Puppeteer",
        "description": "<p>Developing web applications as separate front end and back end parts is a common practice, but brings with it the challenge of how to test those parts together in an end-to-end fashion.</p>\n<p>In this talk, I will show you a strategy for being able to test your web application with Cucumber.js and Puppeteer, a library for running Google Chrome in headless mode. We&#39;ll also explore how to handle things like seeding the database for the API before running tests, how to select elements in the DOM via Cucumber step definitions, and how to do this in a nice fashion using Node 8&#39;s async/await feature. </p>\n<p>My name is Paul Jensen, I&#39;m the author of Manning&#39;s Cross Platform Desktop Applications, and I&#39;m the Lead Innovation Engineer at Starcount. My twitter handle is paulbjensen.</p>\n",
        "milestone": "April 25th 2018",
        "img": "https://avatars3.githubusercontent.com/u/3840?v=4",
        "handle": "paulbjensen",
        "name": "Paul Jensen"
    }
]